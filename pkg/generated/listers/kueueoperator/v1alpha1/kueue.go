/*
Copyright 2024.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	kueueoperatorv1alpha1 "github.com/openshift/kueue-operator/pkg/apis/kueueoperator/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// KueueLister helps list Kueues.
// All objects returned here must be treated as read-only.
type KueueLister interface {
	// List lists all Kueues in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*kueueoperatorv1alpha1.Kueue, err error)
	// Kueues returns an object that can list and get Kueues.
	Kueues(namespace string) KueueNamespaceLister
	KueueListerExpansion
}

// kueueLister implements the KueueLister interface.
type kueueLister struct {
	listers.ResourceIndexer[*kueueoperatorv1alpha1.Kueue]
}

// NewKueueLister returns a new KueueLister.
func NewKueueLister(indexer cache.Indexer) KueueLister {
	return &kueueLister{listers.New[*kueueoperatorv1alpha1.Kueue](indexer, kueueoperatorv1alpha1.Resource("kueue"))}
}

// Kueues returns an object that can list and get Kueues.
func (s *kueueLister) Kueues(namespace string) KueueNamespaceLister {
	return kueueNamespaceLister{listers.NewNamespaced[*kueueoperatorv1alpha1.Kueue](s.ResourceIndexer, namespace)}
}

// KueueNamespaceLister helps list and get Kueues.
// All objects returned here must be treated as read-only.
type KueueNamespaceLister interface {
	// List lists all Kueues in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*kueueoperatorv1alpha1.Kueue, err error)
	// Get retrieves the Kueue from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*kueueoperatorv1alpha1.Kueue, error)
	KueueNamespaceListerExpansion
}

// kueueNamespaceLister implements the KueueNamespaceLister
// interface.
type kueueNamespaceLister struct {
	listers.ResourceIndexer[*kueueoperatorv1alpha1.Kueue]
}
